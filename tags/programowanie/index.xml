<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programowanie on Szychta w danych</title>
    <link>https://psobczyk.github.io/tags/programowanie/</link>
    <description>Recent content in programowanie on Szychta w danych</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Mon, 09 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://psobczyk.github.io/tags/programowanie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R vs Python. Zarządzanie zależnościami</title>
      <link>https://psobczyk.github.io/post/2023-01-03-r-vs-python-zarz-dzanie-zale-no-ciami/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://psobczyk.github.io/post/2023-01-03-r-vs-python-zarz-dzanie-zale-no-ciami/</guid>
      <description>W ciągu najbliższych tygodni na Szychcie pojawi się seria wpisów, które mają przybliżyć tworzenie dobrej jakości kodu w kontekście przetwarzania danych. Wpisy będą techniczne, nie będzie wykresów i narracji zbudowanych na danych. Jednocześnie jest to dobra okazja do porównania dwóch języków programowania R i Pythona, z czego skorzystamy.
Który język będzie górą? Czy filozofia, która za nimi stoi jest zbliżona? Która społeczność kładzie większy nacisk na tworzenie wysokiej jakości kodu?</description>
    </item>
    
    <item>
      <title>Type hinting lub jak dawać wskazówki Pythonowemu interpretatorowi</title>
      <link>https://psobczyk.github.io/post/2021-02-13-type-hinting-lub-jak-dawa%C4%87-wskaz%C3%B3wki-pythonowemu-interpretatorowi/</link>
      <pubDate>Sat, 13 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://psobczyk.github.io/post/2021-02-13-type-hinting-lub-jak-dawa%C4%87-wskaz%C3%B3wki-pythonowemu-interpretatorowi/</guid>
      <description>Uwaga, wpis techniczny!
Kilka miesięcy temu została wypuszczona nowa wersja Pythona 3.9. Ponieważ dwa lata temu R przestał być językiem, w którym programuję ,,na co dzień&amp;quot; nowości Pythona mnie ciekawią i postanowiłem, że oprócz wykresów i analiz danych warto dzielić się także nieco bardziej technicznymi aspektami. To pierwsza odsłona nowej, technicznej twarzy Szychty :)
Co znajdziemy w nowej wersji Pythona? Zestawień nowości jest w internecie bardzo dużo, choćby tutaj. Chciałbym się skupić na tej, która najbardziej mnie zainteresowała czyli uproszczenie typowania funkcji.</description>
    </item>
    
    <item>
      <title>Dentysta w każdej szkole - jak to zrobić w R</title>
      <link>https://psobczyk.github.io/post/dentysta-w-kazdej-szkole-jak-to-zrobic-w-r/</link>
      <pubDate>Mon, 18 Jan 2016 16:30:11 +0000</pubDate>
      
      <guid>https://psobczyk.github.io/post/dentysta-w-kazdej-szkole-jak-to-zrobic-w-r/</guid>
      <description>Dzisiaj w Szychcie zamiast górniczego urobku prezentacja maszyn i technik. Jak wykonać zeszłotygodniową analizę w R? Jakich pakietów należy użyć?
Kody i dane znajdują się na moim koncie na githubie. Dane nie należą do mnie.
Na rozgrzewkę małe wyjaśnienie jak małym kosztem uszeregować województwa do boxplotu. Trik polega na ustawieniu kolejności poziomów (level) dla zmiennej typu factor.
[github file = &amp;ldquo;/psobczyk/szychtawdanych/blob/master/dentysci_w_szkolach/analiza_dentysci.R&amp;rdquo; start_line = &amp;ldquo;29&amp;rdquo; end_line = &amp;ldquo;37&amp;rdquo;]
Następnie już łatwo wygenerować jest wykres w ggplot [github file = &amp;ldquo;/psobczyk/szychtawdanych/blob/master/dentysci_w_szkolach/analiza_dentysci.</description>
    </item>
    
    <item>
      <title>Programowanie w R z wykorzystaniem emacsa cz.2</title>
      <link>https://psobczyk.github.io/post/programowanie-w-r-z-wykorzystaniem-emacsa-cz-2/</link>
      <pubDate>Tue, 25 Nov 2014 21:31:40 +0000</pubDate>
      
      <guid>https://psobczyk.github.io/post/programowanie-w-r-z-wykorzystaniem-emacsa-cz-2/</guid>
      <description>Teraz kilka szczegółów technicznych. W Ubuntu plik konfiguracyjny nazywa się .emacs i znajduje się w katalogu domowym. Biblioteki dobrze jest umieszczać w jakimś ustalonym miejscu np. folderze .emacs.d/. Niestety nie potrafię dać żadnych wskazówek użytkownikom Windowsa oprócz tego linku.
Poniżej zamieszczam swój plik .emacs. W kolejnych postach postaram się wyjaśnić te części, które lepiej zrozumiałem podczas swoich przygód z emacsem. Podstawą dla mojego pliku są informacje zmieszczone na blogu Jessici Hamrick.</description>
    </item>
    
    <item>
      <title>Programowanie w R z wykorzystaniem emacsa</title>
      <link>https://psobczyk.github.io/post/programowanie-w-r-z-wykorzystaniem-emacsa/</link>
      <pubDate>Mon, 06 Oct 2014 19:13:16 +0000</pubDate>
      
      <guid>https://psobczyk.github.io/post/programowanie-w-r-z-wykorzystaniem-emacsa/</guid>
      <description>Widząc ogromną liczbę artykułów na blogach dotyczących RStudio, mam wrażenie, że dominuje ono w dziedzinie IDE dla R. Z tego co wiem, to konkurencji w środowiskach ,,do wyklikania&amp;quot; nie ma bardzo dużej. Sam zresztą uwielbiam z niego korzystać. Szybko i wygodnie można wykonać większość prac, z jakimi można się spotkać w analizie danych. Nie oznacza to, że nie da się pracować inaczej. Jedną z takich możliwości daje emacs.
Emacs jest uniwersalny.</description>
    </item>
    
  </channel>
</rss>
